services:
  traefik:
    image: traefik:v3.2.0
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    network_mode: host
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs:/configs
      - ./certs:/certs
      - ./acme.json:/acme.json
      - ./log:/log
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
      - FQDN=${FQDN}
    command:
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --entrypoints.https.asDefault=true
      - --entrypoints.https.http3=true
      - --entrypoints.https.http3.advertisedPort=443
      ## RHDWP: Adminer ##
      # - --entrypoints.adminer.address=:8000
      ## RHDWP: Adminer end ##
      - --providers.file.directory=/configs
      - --providers.file.watch=true
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedbydefault=false
      - --providers.docker.watch=true
      ## RHDWP: API ##
      # - --api.insecure=true
      ## RHDWP: API end ##

      # Cloudflare cert resolver
      - --certificatesresolvers.cloudflare.acme.email=${CF_API_EMAIL}
      - --certificatesresolvers.cloudflare.acme.storage=/acme.json
      - --certificatesresolvers.cloudflare.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers[0]=1.1.1.1:53
      - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers[1]=1.0.0.1:53

      # HTTP cert resolver
      - --certificatesresolvers.http.acme.httpchallenge=true
      - --certificatesresolvers.http.acme.httpchallenge.entrypoint=http
      - --certificatesresolvers.http.acme.email=${CF_API_EMAIL}
      - --certificatesresolvers.http.acme.storage=/acme.json

      # Logging
      - --log.level=${LOGLEVEL}
      - --log.filePath=/log/traefik.log
      - --log.maxsize=5
      - --log.maxbackups=3
      ## RHDWP: Cert staging ##
      # - --certificatesresolvers.cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      # - --certificatesresolvers.http.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      ## RHDWP: Cert staging end ##
    labels:
      - "traefik.tls.stores.default.defaultGeneratedCert.resolver=http"
      - "traefik.http.middlewares.service-retry.retry.attempts=4"
      - "traefik.http.middlewares.forward-headers.forwardauth.trustForwardHeader=true"

      ## RHDWP: Buffering ##
      # - "traefik.https.middlewares.limit.buffering.maxRequestBodyBytes=4000000000"
      # - "traefik.https.middlewares.limit.buffering.memRequestBodyBytes=4000000000"
      # - "traefik.https.middlewares.limit.buffering.maxResponseBodyBytes=4000000000"
      # - "traefik.https.middlewares.limit.buffering.retryExpression=IsNetworkError() && Attempts() < 2"
      ## RHDWP: Buffering end ##

  traefik-certs-dumper:
    image: ldez/traefik-certs-dumper:v2.8.1
    entrypoint: sh -c '
      apk add jq;
      while ! [[ -e /acme.json ]] || [[ -z "$$(jq ".[] | .Certificates | length" /acme.json)" ]];
      do sleep 1;
      done && traefik-certs-dumper file --version v2 --watch --source /acme.json --dest /certs'
    volumes:
      - ./certs:/certs
      - ./acme.json:/acme.json

  ## RHDWP: Adminer ##
  # adminer:
  #   image: adminer
  #   environment:
  #     - ADMINER_DEFAULT_SERVER=mysql
  #     - ADMINER_DESIGN=nicu
  #   networks:
  #     - %%project_label%%_internal
  #   ports:
  #     - 8000:8000
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.adminer.entrypoints=adminer"
  #     - "traefik.http.routers.adminer.rule=Host(`${FQDN}`)"
  ## RHDWP: Adminer end ##

networks:
  web:
    external: true
  ## RHDWP: Adminer ##
  # %%project_label%%_internal:
  #   external: true
  ## RHDWP: Adminer end ##
